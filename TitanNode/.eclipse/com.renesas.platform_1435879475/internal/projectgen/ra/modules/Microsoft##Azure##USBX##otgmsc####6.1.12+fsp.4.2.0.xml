<?xml version="1.0" ?>
<raModuleDescription>
    <config id="config.driver.usbx_otg_msc" path="fsp_cfg/r_usb_otg_msc_cfg.h" version="0">
        <property id="config.driver.usbx_otg_msc.bulk_in" display="Bulk In Pipe" default="config.driver.usbx_otg_msc.bulk_in.pipe1" description="Select the USB pipe to use for bulk input transfers.">
            <option id="config.driver.usbx_otg_msc.bulk_in.pipe1" display="USB PIPE1" value="USB_PIPE1"/>
            <option id="config.driver.usbx_otg_msc.bulk_in.pipe2" display="USB PIPE2" value="USB_PIPE2"/>
            <option id="config.driver.usbx_otg_msc.bulk_in.pipe3" display="USB PIPE3" value="USB_PIPE3"/>
            <option id="config.driver.usbx_otg_msc.bulk_in.pipe4" display="USB PIPE4" value="USB_PIPE4"/>
            <option id="config.driver.usbx_otg_msc.bulk_in.pipe5" display="USB PIPE5" value="USB_PIPE5"/>
        </property>
        <property id="config.driver.usbx_otg_msc.bulk_out" display="Bulk Out Pipe" default="config.driver.usbx_otg_msc.bulk_out.pipe2" description="Select the USB pipe to use for bulk output transfers.">
            <option id="config.driver.usbx_otg_msc.bulk_out.pipe1" display="USB PIPE1" value="USB_PIPE1"/>
            <option id="config.driver.usbx_otg_msc.bulk_out.pipe2" display="USB PIPE2" value="USB_PIPE2"/>
            <option id="config.driver.usbx_otg_msc.bulk_out.pipe3" display="USB PIPE3" value="USB_PIPE3"/>
            <option id="config.driver.usbx_otg_msc.bulk_out.pipe4" display="USB PIPE4" value="USB_PIPE4"/>
            <option id="config.driver.usbx_otg_msc.bulk_out.pipe5" display="USB PIPE5" value="USB_PIPE5"/>
        </property>
        <property id="config.driver.usbx_otg_msc.vendor" display="Vendor Information" default="Vendor  " description="Specify the vendor information field (part of the Inquiry command response).">
            <constraint display="Vendor Information must be 8 bytes long; pad with spaces if shorter.">eval('' +
            'var input = "${config.driver.usbx_otg_msc.vendor}";' +
            '( 8 === input.length )')
            </constraint>
        </property>
        <property id="config.driver.usbx_otg_msc.product" display="Product Information" default="Mass Storage    " description="Specify the product information field (part of the Inquiry command response).">
            <constraint display="Product Information must be 16 bytes long; pad with spaces if shorter.">eval('' +
            'var input = "${config.driver.usbx_otg_msc.product}";' +
            '( 16 === input.length )')
            </constraint>
        </property>
        <property id="config.driver.usbx_otg_msc.revision" display="Product Revision Level" default="1.00" description="Specify the product revision level field (part of the Inquiry command response).">
            <constraint display="Product Revision Level must be 4 bytes long; pad with spaces if shorter.">eval('' +
            'var input = "${config.driver.usbx_otg_msc.revision}";' +
            '( 4 === input.length )')
            </constraint>
        </property>
        <content>
            #ifdef __cplusplus
            extern "C" {
            #endif

            #define USB_CFG_PMSC_BULK_IN (${config.driver.usbx_otg_msc.bulk_in})
            #define USB_CFG_PMSC_BULK_OUT (${config.driver.usbx_otg_msc.bulk_out})
            #define USB_CFG_PMSC_VENDOR "${config.driver.usbx_otg_msc.vendor}"
            #define USB_CFG_PMSC_PRODUCT "${config.driver.usbx_otg_msc.product}"
            #define USB_CFG_PMSC_REVISION "${config.driver.usbx_otg_msc.revision}"
            #ifdef __cplusplus
            }
            #endif

        </content>
    </config>
    <module config="config.driver.usbx_otg_msc" display="Connectivity|Azure RTOS USBX OTG MSC" id="module.driver.usbx_otg_msc" visible="false" version="1" url="https://docs.microsoft.com/en-us/azure/rtos/usbx/">
        <constraint display="Unique name required for each instance">
            "${interface.driver.usbx_otg_msc.${module.driver.usbx_otg_msc.name}}" === "1"
        </constraint>
        <constraint display="Requires USB Peripheral">
          "${interface.mcu.usb_fs.external}" === "1"
        </constraint>
        <!--
        <constraint display="Requires higher level memory implementation">
            testExists("${module.driver.usbx_pmsc.requires.rm_block_media::module.driver.rm_block_media.name}")
        </constraint>
        <constraint display="The USB pipe number for Bulk Input and Bulk Output must be different.">
            !(("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe1"))
        </constraint>
        <constraint display="The USB pipe number for Bulk Input and Bulk Output must be different.">
            !(("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe2") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe2"))
        </constraint>
        <constraint display="The USB pipe number for Bulk Input and Bulk Output must be different.">
            !(("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe3") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe3"))
        </constraint>
        <constraint display="The USB pipe number for Bulk Input and Bulk Output must be different.">
            !(("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe4") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe4"))
        </constraint>
        <constraint display="The USB pipe number for Bulk Input and Bulk Output must be different.">
            !(("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe5") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe5"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Input transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe3"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Input transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe4"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Input transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe5"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Output transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe3"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Output transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe4"))
        </constraint>
        <constraint display="Requires USB PIPE1 or PIPE2 for Bulk Output transfers when using DMA.">
            !(("${config.driver.usb_basic.dma}" === "config.driver.usb_basic.dma.enable") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe5"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Input transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe1"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Input transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe2"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Input transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_in}" === "config.driver.usbx_pmsc.bulk_in.pipe3"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Output transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe1"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Output transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe2"))
        </constraint>
        <constraint display="Requires USB PIPE4 or PIPE5 for Bulk Output transfer when using RA2A1.">
            !(("${interface.mcu.ra2a1}" === "1") &amp;&amp;
            ("${config.driver.usbx_pmsc.bulk_out}" === "config.driver.usbx_pmsc.bulk_out.pipe3"))
        </constraint>
        -->
        <requires id="module.azure.usbx_otg_msc.requires.threadx" interface="interface.rtos.tx" visible="false" display="Requires ThreadX"/>
        <requires id="module.driver.usbx_otg_msc.requires.rm_block_media" interface="interface.driver.rm_block_media_pmsc" display="Add Memory Implementation [Required]" find="false">
            <override property="module.driver.rm_block_media.callback" value="r_usb_pmsc_block_media_event_callback"/>
        </requires>
        <requires id="module.driver.usbx_otg_msc.requires.usb_basic" interface="interface.middleware.rm_usbx_port_pmsc" visible="false" display="USBX OTG_MSC">
            <override property="module.middleware.rm_usbx_port.usb_mode" value="module.middleware.rm_usbx_port.usb_mode.host_and_peri"/>
            <override property="module.middleware.rm_usbx_port.usb_classtype" value="module.middleware.rm_usbx_port.usb_classtype.hmsc"/>
            <override property="module.middleware.rm_usbx_port.usb_classtype" value="module.middleware.rm_usbx_port.usb_classtype.pmsc"/>
            <override property="module.middleware.rm_usbx_port.p_usb_reg" value="NULL"/>
            <override property="module.middleware.rm_usbx_port.p_context" value="${module.driver.usbx_otg_msc.requires.rm_block_media::module.driver.rm_block_media.name}"/>
        </requires>
        <provides interface="interface.driver.usbx_hmsc" />
        <provides interface="interface.driver.usbx_pmsc" />
        <provides interface="interface.driver.usbx_otg_msc" />
        <provides interface="interface.driver.usbx_otg_msc.${module.driver.usbx_otg_msc.name}" />
        <property default="usbx_otg_msc" id="module.driver.usbx_otg_msc.usbx_otg_msc_interface" description=""/>
        <property default="g_usbx_otg_msc${_instance}" display="Name" id="module.driver.usbx_otg_msc.name" description="Module name.">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.usbx_otg_msc.name}")</constraint>
        </property>
        <header>
        /** MSC Driver on USB Instance. */
        </header>
        <includes>
#include "ux_host_class_storage.h"
#include "ux_device_class_storage.h"
        </includes>
        <declarations>
        </declarations>
        <functions>
        </functions>
        <api configurable="true">
        </api>
    </module>
</raModuleDescription>

